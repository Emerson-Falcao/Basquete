/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controller.OperacoesBanco;
import Models.Jogo;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Emerson
 */
public class Grafico extends javax.swing.JPanel {

    private OperacoesBanco ope = new OperacoesBanco();
    public Grafico() {
        initComponents();
        initBars();
        
    }
    //este método busca todos os jogos no banco e os renderiza como um gráfico de barras
    public void initBars(){
        DefaultCategoryDataset barchartdata = new DefaultCategoryDataset();
        ArrayList<Jogo> jogos = null;
        try {
            jogos = ope.getTodosJogos();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Grafico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Grafico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Grafico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Grafico.class.getName()).log(Level.SEVERE, null, ex);
        }
            //cada jogo é renderizado como uma barra, indicando o número do jogo no eixo x e o placar do jogo no eixo y
            Jogo jogo;
            for(int i=1; i< jogos.size();i++){
               jogo = jogos.get(i); 
               barchartdata.setValue(jogo.getPlacar(), "",""+jogo.getNum());  
            }
        //depois que todas as barras são criadas, o gráfico é renderizado com uso da biblioteca JFreeChart
        JFreeChart barchart = ChartFactory.createBarChart("", "", "", barchartdata, PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt = barchart.getCategoryPlot();
        barchrt.setBackgroundPaint(new Color(253,253,253));
        BarRenderer bar = (BarRenderer) barchrt.getRenderer();
        bar.setSeriesPaint(0, new Color(152,124,180));
        bar.setBarPainter(new StandardBarPainter());
        ChartPanel barPanel = new ChartPanel(barchart);
        grafPanel.removeAll();
        grafPanel.add(barPanel, BorderLayout.CENTER);
        grafPanel.repaint();
        grafPanel.validate(); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grafPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        grafPanel.setBackground(new java.awt.Color(254, 254, 254));
        grafPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        grafPanel.setMaximumSize(new java.awt.Dimension(550, 190));
        grafPanel.setMinimumSize(new java.awt.Dimension(550, 190));
        grafPanel.setLayout(new java.awt.BorderLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(84, 37, 141));
        jLabel4.setText("Progressão de Resultados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grafPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(grafPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel grafPanel;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
